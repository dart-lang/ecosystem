name: Comment on the pull request

on:
  # Trigger this workflow after the Health workflow completes. This workflow will have permissions to
  # do things like create comments on the PR, even if the original workflow couldn't.
  workflow_call:
  workflow_run:
    workflows: [Health, Publish]
    types:
      - completed

jobs:
  upload:
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    # continue-on-error: true
    steps:

      # Download the output of the health workflow, consisting of the comment markdown and either
      # the issue number or an existing comment ID.
      - name: 'Download artifact'
        uses: actions/github-script@6f00a0b667f9463337970371ccda9072ee86fb27
        with:
          script: |
            var artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }},
            });
            var matchArtifacts = artifacts.data.artifacts.filter((artifact) => {
              console.log(artifact);
              return artifact.name.startsWith("output");
            });
            var fs = require('fs');
            for (const artifact of matchArtifacts) {
              console.log(artifact);
              if (Object.prototype.hasOwnProperty.call(matchArtifacts, artifact)) {
                  var download = await github.rest.actions.downloadArtifact({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    artifact_id: artifact.id,
                    archive_format: 'zip',
                  });
                  fs.writeFileSync(`${{ github.workspace }}/comment${ artifact.id }.zip`, Buffer.from(download.data));
              }
            }
      - run: for z in *.zip; do unzip "$z" -d "$z".comment; done


      # Create the comment, or update the existing one, with the markdown
      # generated in the Health workflow.
      - name: 'Comment on PR'
        uses: actions/github-script@6f00a0b667f9463337970371ccda9072ee86fb27
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var fs = require('fs');

            const subdirectories = fs.readdirSync('.');
            const commentSubdirectories = subdirectories.filter(subdir => subdir.endsWith('.comment'));
            for (const subdirectory of commentSubdirectories) {
              var markdown = fs.readFileSync('./comment.md', 'utf8');
              if (fs.existsSync(`${subdirectory}/commentId`)) {
                  var comment_number = Number(fs.readFileSync(`${subdirectory}/commentId`, 'utf8'));
            
                  await github.rest.issues.updateComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    comment_id: comment_number,
                    body: markdown
                  });
              }
              else {
                  var issue_number = Number(fs.readFileSync(`${subdirectory}/issueNumber`, 'utf8'));
            
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue_number,
                    body: markdown
                  });
              }
            }